# ログインシェルの変更 set-option -g default-shell /bin/zsh
set-option -g default-command $('which zsh')

# ウィンドウとペインの番号を1から開始する（デフォルト0）
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Prefix+C-s で横に、Prefix+C-v で縦に分割（ペイン）する
bind-key C-v split-window -h
bind-key C-s split-window -v

# キーストロークのディレイを減らす
set -sg escape-time 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# 4分割する
bind space source-file ~/dotfiles/tmux/split_4

# Prefix + Ctrl-h/l でウィンドウ切り替え
# Prefix + Ctrl-h,h,h,h,...と連打できる
bind-key -r C-p select-window -t :-
bind-key -r C-n select-window -t :+

# Prefix+hjkl でペイン移動
bind-key -r C-h select-pane -L
bind-key -r C-j select-pane -D
bind-key -r C-k select-pane -U
bind-key -r C-l select-pane -R

# ペインサイズを上下左右（Prefix+JKHL）に変更
# Prefix+J,J,J,J,...と連打してリサイズ可能
bind-key -r H resize-pane -L 3
bind-key -r J resize-pane -D 3
bind-key -r K resize-pane -U 3
bind-key -r L resize-pane -R 3

# 256色端末を使用する
set -g default-terminal "screen-256color"

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg green

# ウィンドウリストの色を設定する
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
# アクティブなウィンドウを目立たせる
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# ペインボーダーの色を設定する
set -g pane-border-fg green
set -g pane-border-bg black
# アクティブなペインを目立たせる
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow



# ステータスバーを設定する
## 左パネルを設定する

set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
## 右パネルを設定する
set -g status-right "#[fg=cyan][%Y-%m-%d(%a) %H:%M]"
## ステータスバーのUTF-8サポートを有効にする
# set -g status-utf8 on
## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on
## ステータスバーを上部に表示する
set -g status-position top

# mouse
setw -g mouse on
bind -n WheelUpPane copy-mode
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# Vi キーバインド
set-window-option -g mode-keys vi

# Prefix+v でコピーモード開始
bind-key v copy-mode \; display "Copy mode!"
bind-key -T copy-mode-vi v send -X begin-selection

# Prefix+Enter/y でコピー
bind-key -T copy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi y     send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Prefix+p でペースト
# クリップボードにも保存されているので Cmd-v でもペースト可能
bind-key p paste-buffer
# Vi キーバインド
set-window-option -g mode-keys vi

# Prefix+v でコピーモード開始
bind-key v copy-mode \; display "Copy mode!"
#bind-key -T copy-mode-vi v begin-selection

# Prefix+Enter/y でコピー
bind-key -T copy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi y     send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Prefix+p でペースト
# クリップボードにも保存されているので Cmd-v でもペースト可能
bind-key p paste-buffer

# Esc キーでコピーの反転を解除（コピーモードは抜けない）
bind-key -T copy-mode-vi Escape send -X clear-selection
# Ctrl-c キーでコピーの反転を解除し、コピーモードから抜ける
bind-key -T copy-mode-vi C-c send -X cancel

# コピーモード中（Prefix+v 後）C-v で矩形選択開始
bind-key -T copy-mode-vi C-v send -X rectangle-toggle
# 1行選択
bind-key -T copy-mode-vi V send -X select-line


# 画面上に映る最上行に移動
bind-key -T copy-mode-vi g send -X top-line
# 画面上に映る最下行に移動
bind-key -T copy-mode-vi G send -X bottom-line

# 前方検索
bind-key -T copy-mode-vi / send -X search-forward
# 後方検索
bind-key -T copy-mode-vi ? send -X search-backward

# ページスクロール
bind-key -T copy-mode-vi C-n send -X page-up
bind-key -T copy-mode-vi C-f send -X page-down
# ページ送り
bind-key -T copy-mode-vi C-u send -X scroll-up
bind-key -T copy-mode-vi C-d send -X scroll-down
